<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yszhao的博客</title>
  
  <subtitle>记录我的生活 学习</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-08-12T07:42:56.263Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>yszhao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>商城开发-拼团功能开发设计</title>
    <link href="http://example.com/posts/701fec33.html"/>
    <id>http://example.com/posts/701fec33.html</id>
    <published>2024-08-12T07:24:12.000Z</published>
    <updated>2024-08-12T07:42:56.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="功能需求描述"><a href="#功能需求描述" class="headerlink" title="功能需求描述"></a>功能需求描述</h1><h1 id="数据库表设计"><a href="#数据库表设计" class="headerlink" title="数据库表设计"></a>数据库表设计</h1><p>fa_wanlshop_groups  拼团表</p><p>id    int    10    0    0    0    -1    0                ID                    0    0    0    0    -1    -1    0<br>group_no    varchar    32    0    0    0    0    0                拼团号            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>user_id    int    10    0    0    0    0    0            0    团长ID                    0    0    0    0    0    0    0<br>shop_id    int    10    0    0    0    0    0            0    所属商家                    0    0    0    0    0    0    0<br>goods_id    int    10    0    0    0    0    0            0    所属商品                    0    0    0    0    0    0    0<br>group_type    enum    0    0    0    0    0    0        ‘alone’,’group’,’ladder’        拼团类型:alone=直购,group=拼团,ladder=阶梯拼团            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>is_ladder    tinyint    1    0    0    0    0    0            0    是否阶梯拼团                    0    0    0    0    0    0    0<br>ladder_id    int    10    0    0    0    0    0            0    阶梯ID                    0    0    0    0    0    0    0<br>people_num    int    10    0    0    0    0    0            0    成团人数                    0    0    0    0    0    0    0<br>join_num    int    10    0    0    0    0    0            0    参团人数                    0    0    0    0    0    0    0<br>state    enum    0    0    0    0    0    0        ‘ready’,’start’,’success’,’fail’,’auto’    ‘ready’    拼团状态:ready=准备中,start=拼团中,success=已成团,fail=拼团失败,auto=自动成团            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>createtime    int    10    0    -1    0    0    0                开团时间                    0    0    0    0    0    0    0<br>grouptime    int    10    0    -1    0    0    0                成团时间                    0    0    0    0    0    0    0<br>validitytime    int    10    0    -1    0    0    0                有效时间                    0    0    0    0    0    0    0<br>updatetime    int    10    0    -1    0    0    0                更新时间                    0    0    0    0    0    0    0<br>deletetime    int    10    0    -1    0    0    0                删除时间                    0    0    0    0    0    0    0<br>status    enum    0    0    -1    0    0    0        ‘normal’,’hidden’    ‘normal’    状态            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0</p><p>fa_wanlshop_groups_goods 拼团商品表</p><p>id    int    10    0    0    0    -1    0                ID                    0    0    0    0    -1    -1    0<br>shop_id    int    10    0    -1    0    0    0            0    店铺ID                    0    0    0    0    0    -1    0<br>shop_category_id    varchar    100    0    -1    0    0    0                店铺内类目            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>category_id    int    10    0    0    0    0    0            0    商品类目                    0    0    0    0    0    -1    0<br>brand_id    int    10    0    -1    0    0    0            0    品牌ID                    0    0    0    0    0    -1    0<br>category_attribute    longtext    0    0    -1    0    0    0                类目属性            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>title    varchar    100    0    0    0    0    0                商品标题            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>image    varchar    100    0    0    0    0    0                商品主图            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>images    varchar    1500    0    0    0    0    0                产品相册            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>description    varchar    255    0    0    0    0    0                商品描述            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>is_alone    tinyint    1    0    0    0    0    0            1    是否显示单购是:0=否,1=是                    0    0    0    0    0    0    0<br>people_num    int    3    0    -1    0    0    0            0    组团人数                    0    0    0    0    0    0    0<br>groups_num    int    3    0    -1    0    0    0            0    成团人数                    0    0    0    0    0    0    0<br>is_ladder    tinyint    1    0    0    0    0    0            0    开启阶梯团:0=否,1=是                    0    0    0    0    0    0    0<br>group_hour    int    10    0    0    0    0    0            24    组团限时(小时)                    0    0    0    0    0    0    0<br>purchase_limit    int    6    0    0    0    0    0            0    个人购买次数限制，默认是0，没有次数限制                    0    0    0    0    0    0    0<br>is_discount    tinyint    1    0    0    0    0    0            0    是否显示团长优惠是:0=否,1=是                    0    0    0    0    0    0    0<br>discount_type    tinyint    1    0    0    0    0    0            0    团长优惠类型:0=金额,1=百分百                    0    0    0    0    0    0    0<br>discount    float    10    2    -1    0    0    0            0.00    优惠金额/折扣                    0    0    0    0    0    0    0<br>flag    set    0    0    0    0    0    0        ‘hot’,’index’,’recommend’        标志(多选):hot=热门,index=首页,recommend=推荐            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>stock    enum    0    0    0    0    0    0        ‘porder’,’payment’    ‘porder’    库存计算方式:porder=下单减库存,payment=付款减库存            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>content    longtext    0    0    0    0    0    0                商品详情            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>freight_id    int    10    0    0    0    0    0            0    运费模板                    0    0    0    0    0    -1    0<br>grounding    tinyint    1    0    0    0    0    0            0    上架状态                    0    0    0    0    0    0    0<br>specs    enum    0    0    0    0    0    0        ‘single’,’multi’    ‘single’    商品规格:single=单规格,multi=多规格            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>distribution    enum    0    0    0    0    0    0        ‘true’,’false’    ‘false’    是否独立分销:true=开启,false=关闭            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>activity    enum    0    0    0    0    0    0        ‘true’,’false’    ‘false’    是否活动中:true=是,false=否            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>views    int    10    0    0    0    0    0            0    点击                    0    0    0    0    0    -1    0<br>price    decimal    10    2    -1    0    0    0            0.00    产品价格                    0    0    0    0    0    0    0<br>sales    int    10    0    0    0    0    0            0    销量                    0    0    0    0    0    -1    0<br>payment    int    10    0    0    0    0    0            0    付款人数                    0    0    0    0    0    -1    0<br>comment    int    10    0    0    0    0    0            0    评论                    0    0    0    0    0    -1    0<br>praise    int    10    0    0    0    0    0            0    好评                    0    0    0    0    0    -1    0<br>moderate    int    10    0    0    0    0    0            0    中评                    0    0    0    0    0    -1    0<br>negative    int    10    0    0    0    0    0            0    差评                    0    0    0    0    0    -1    0<br>like    int    10    0    0    0    0    0            0    收藏                    0    0    0    0    0    -1    0<br>weigh    int    10    0    0    0    0    0            0    权重                    0    0    0    0    0    0    0<br>createtime    int    10    0    -1    0    0    0                创建时间                    0    0    0    0    0    0    0<br>updatetime    int    10    0    -1    0    0    0                更新时间                    0    0    0    0    0    0    0<br>deletetime    int    10    0    -1    0    0    0                删除时间                    0    0    0    0    0    0    0<br>status    enum    0    0    -1    0    0    0        ‘normal’,’hidden’    ‘normal’    状态            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0</p><p>fa_wanlshop_groups_team  拼团记录表</p><p>id    int    10    0    0    0    -1    0                ID                    0    0    0    0    -1    -1    0<br>group_no    varchar    32    0    0    0    0    0                拼团号            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>user_id    int    10    0    0    0    0    0            0    用户ID                    0    0    0    0    0    0    0<br>shop_id    int    10    0    0    0    0    0            0    所属商家ID                    0    0    0    0    0    0    0<br>order_id    int    10    0    0    0    0    0            0    订单ID                    0    0    0    0    0    0    0<br>order_goods_id    int    10    0    0    0    0    0            0    订单商品ID                    0    0    0    0    0    0    0<br>username    varchar    32    0    -1    0    0    0                快递号            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>nickname    varchar    50    0    -1    0    0    0                快递号            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>avatar    varchar    255    0    -1    0    0    0                快递号            utf8mb4    utf8mb4_unicode_ci    0    0    0    0    0    0    0<br>createtime    int    10    0    -1    0    0    0                参团时间                    0    0    0    0    0    0    0<br>updatetime    int    10    0    -1    0    0    0                更新时间                    0    0    0    0    0    0    0<br>deletetime    int    10    0    -1    0    0    0                删除时间                    0    0    0    0    0    0    0</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;功能需求描述&quot;&gt;&lt;a href=&quot;#功能需求描述&quot; class=&quot;headerlink&quot; title=&quot;功能需求描述&quot;&gt;&lt;/a&gt;功能需求描述&lt;/h1&gt;&lt;h1 id=&quot;数据库表设计&quot;&gt;&lt;a href=&quot;#数据库表设计&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>商城开发-SPU和SKU数据结构设计</title>
    <link href="http://example.com/posts/ce3caa74.html"/>
    <id>http://example.com/posts/ce3caa74.html</id>
    <published>2024-08-12T06:24:31.000Z</published>
    <updated>2024-08-12T07:25:41.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、SPU和SKU"><a href="#一、SPU和SKU" class="headerlink" title="一、SPU和SKU"></a>一、SPU和SKU</h1><p>SPU：Standard Product Unit （标准产品单位） ，一组具有共同属性的商品集</p><p>示例 如奶茶商品中的 容量  大 、中 、小 杯<br>     如奶茶商品中   甜度  少糖 标准  加糖</p><p>SKU：Stock Keeping Unit（库存量单位），SPU商品集因具体特性不同而细分的每个商品</p><p>示例 如奶茶商品中 【就是 容量 与 甜度 的排列组合】</p><pre><code>    大杯  少糖    中杯  少糖    小杯  少糖    大杯  标准    中杯  标准    小杯  标准    。。。</code></pre><h1 id="二、数据库设计"><a href="#二、数据库设计" class="headerlink" title="二、数据库设计"></a>二、数据库设计</h1><h2 id="2-1-spu表"><a href="#2-1-spu表" class="headerlink" title="2.1 spu表"></a>2.1 spu表</h2><table><thead><tr><th align="left">字段</th><th align="center">类型</th><th align="right">描述</th></tr></thead><tbody><tr><td align="left">id</td><td align="center">int</td><td align="right">ID</td></tr><tr><td align="left">goods_id</td><td align="center">int</td><td align="right">商品ID</td></tr><tr><td align="left">name</td><td align="center">varchar</td><td align="right">规格名称</td></tr><tr><td align="left">item</td><td align="center">text</td><td align="right">规格</td></tr><tr><td align="left">status</td><td align="center">tinty</td><td align="right">状态</td></tr><tr><td align="left">createtime</td><td align="center">int</td><td align="right">创建时间</td></tr><tr><td align="left">updatetime</td><td align="center">int</td><td align="right">更新时间</td></tr></tbody></table><p>6    2    口味    微辣,中辣,特辣    1723441719    1723441719        0</p><h2 id="2-2sku-表"><a href="#2-2sku-表" class="headerlink" title="2.2sku 表"></a>2.2sku 表</h2><table><thead><tr><th align="left">字段</th><th align="center">类型</th><th align="right">描述</th></tr></thead><tbody><tr><td align="left">id</td><td align="center">int</td><td align="right">ID</td></tr><tr><td align="left">goods_id</td><td align="center">int</td><td align="right">商品ID</td></tr><tr><td align="left">thumbnail</td><td align="center">text</td><td align="right">缩略图</td></tr><tr><td align="left">difference</td><td align="center">text</td><td align="right">规格</td></tr><tr><td align="left">price</td><td align="center">decimal(10,2)</td><td align="right">价格</td></tr><tr><td align="left">stock</td><td align="center">int</td><td align="right">库存</td></tr><tr><td align="left">sn</td><td align="center">varchar(200)</td><td align="right">商品标号</td></tr><tr><td align="left">createtime</td><td align="center">int</td><td align="right">创建时间</td></tr><tr><td align="left">updatetime</td><td align="center">int</td><td align="right">更新时间</td></tr></tbody></table><p>2    2        微辣,小份    1    11    11    1    11    0    1    1723441530    1723441600        normal</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、SPU和SKU&quot;&gt;&lt;a href=&quot;#一、SPU和SKU&quot; class=&quot;headerlink&quot; title=&quot;一、SPU和SKU&quot;&gt;&lt;/a&gt;一、SPU和SKU&lt;/h1&gt;&lt;p&gt;SPU：Standard Product Unit （标准产品单位） ，一组具有共同</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>php开发-fastadmin表格操作列自定义按钮</title>
    <link href="http://example.com/posts/5f9fc809.html"/>
    <id>http://example.com/posts/5f9fc809.html</id>
    <published>2024-08-08T12:30:54.000Z</published>
    <updated>2024-08-12T03:14:39.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自定义弹框效果按钮"><a href="#自定义弹框效果按钮" class="headerlink" title="自定义弹框效果按钮"></a>自定义弹框效果按钮</h1><p>classname字段控制 btn-dialog</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27;changerecord&#x27;</span>,</span><br><span class="line">   <span class="attr">text</span>: <span class="string">&#x27;动账记录查询&#x27;</span>,</span><br><span class="line">   <span class="attr">icon</span>: <span class="string">&#x27;fa fa-search&#x27;</span>,</span><br><span class="line">   <span class="attr">classname</span>: <span class="string">&#x27;btn btn-info btn-xs btn-dialog&#x27;</span>,</span><br><span class="line">   <span class="attr">url</span>: <span class="string">&#x27;cms/bank/changeRecord&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="需要确认后再处理"><a href="#需要确认后再处理" class="headerlink" title="需要确认后再处理"></a>需要确认后再处理</h1><p>visible 字段可根据数据判断 是否显示按钮</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">         &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;jy&#x27;</span>,</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;解约&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;fa fa-search&#x27;</span>,</span><br><span class="line">            <span class="attr">classname</span>: <span class="string">&#x27;btn btn-info btn-xs btn-danger btn-ajax&#x27;</span>,</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;cms/bank/unwind&#x27;</span>,</span><br><span class="line">            <span class="attr">visible</span>: <span class="function"><span class="keyword">function</span> (<span class="params">row</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (row.status == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">confirm</span>: <span class="string">&#x27;确定要解约吗?&#x27;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">data, ret</span>) </span>&#123;</span><br><span class="line">                $(<span class="string">&quot;a.btn-refresh&quot;</span>).trigger(<span class="string">&quot;click&quot;</span>);</span><br><span class="line">                layer.alert(ret.msg);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//如果需要阻止成功提示，则必须使用return false;</span></span><br><span class="line">                <span class="comment">//return false;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="function"><span class="keyword">function</span> (<span class="params">data, ret</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(data, ret);</span><br><span class="line">                layer.alert(ret.msg);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"><span class="string">``</span><span class="string">`    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 控制字段的显示</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">formatter字段中处理</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>js </span><br><span class="line"> &#123;</span><br><span class="line">    <span class="attr">field</span>: <span class="string">&#x27;status&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;状态&#x27;</span>,<span class="attr">operate</span>: <span class="literal">false</span>, <span class="attr">formatter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;已签约&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;未签约&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">field</span>: <span class="string">&#x27;grant&#x27;</span>, <span class="attr">title</span>: __(<span class="string">&#x27;Grant&#x27;</span>), <span class="attr">operate</span>: <span class="string">&#x27;LIKE&#x27;</span>,<span class="attr">formatter</span>: Controller.api.formatter.grant&#125;</span><br></pre></td></tr></table></figure><h1 id="自定义编辑删除按钮"><a href="#自定义编辑删除按钮" class="headerlink" title="自定义编辑删除按钮"></a>自定义编辑删除按钮</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     <span class="attr">name</span>: <span class="string">&#x27;edit&#x27;</span>,</span><br><span class="line">     <span class="attr">icon</span>: <span class="string">&#x27;fa fa-pencil&#x27;</span>,</span><br><span class="line">     <span class="attr">title</span>: __(<span class="string">&#x27;Edit&#x27;</span>),</span><br><span class="line">     <span class="attr">extend</span>: <span class="string">&#x27;data-toggle=&quot;tooltip&quot;&#x27;</span>,</span><br><span class="line">     <span class="attr">classname</span>: <span class="string">&#x27;btn btn-xs btn-success btn-editone&#x27;</span>,</span><br><span class="line">     <span class="attr">visible</span>: <span class="function"><span class="keyword">function</span> (<span class="params">row</span>) </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> row.status === <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;,</span><br><span class="line">&#123;</span><br><span class="line">     <span class="attr">name</span>: <span class="string">&#x27;del&#x27;</span>,</span><br><span class="line">     <span class="attr">icon</span>: <span class="string">&#x27;fa fa-trash&#x27;</span>,</span><br><span class="line">     <span class="attr">title</span>: __(<span class="string">&#x27;Del&#x27;</span>),</span><br><span class="line">     <span class="attr">extend</span>: <span class="string">&#x27;data-toggle=&quot;tooltip&quot;&#x27;</span>,</span><br><span class="line">     <span class="attr">classname</span>: <span class="string">&#x27;btn btn-xs btn-danger btn-delone&#x27;</span>,</span><br><span class="line">     <span class="attr">visible</span>: <span class="function"><span class="keyword">function</span> (<span class="params">row</span>) </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> row.status === <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="自定义提交处理"><a href="#自定义提交处理" class="headerlink" title="自定义提交处理"></a>自定义提交处理</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          Controller.api.selectcoupon();</span><br><span class="line">          Controller.api.selectusers();</span><br><span class="line">          </span><br><span class="line">          Form.api.bindevent($(<span class="string">&quot;form[role=form]&quot;</span>), <span class="function"><span class="keyword">function</span>(<span class="params">data, ret</span>)</span>&#123;</span><br><span class="line">              <span class="comment">//如果我们需要在提交表单成功后做跳转，可以在此使用location.href=&quot;链接&quot;;进行跳转</span></span><br><span class="line">          &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">data, ret</span>)</span>&#123;</span><br><span class="line">              <span class="comment">// 错误处理</span></span><br><span class="line">              Fast.api.close();</span><br><span class="line">          &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">success, error</span>)</span>&#123;</span><br><span class="line">              <span class="comment">//bindevent的第三个参数为提交前的回调</span></span><br><span class="line">              <span class="comment">//如果我们需要在表单提交前做一些数据处理，则可以在此方法处理</span></span><br><span class="line">              <span class="comment">//注意如果我们需要阻止表单，可以在此使用return false;即可</span></span><br><span class="line">              <span class="comment">//如果我们处理完成需要再次提交表单则可以使用submit提交,如下</span></span><br><span class="line">              <span class="keyword">if</span>(!$(<span class="string">&quot;#user_ids&quot;</span>).val())&#123;</span><br><span class="line">                  Toastr.error(<span class="string">&quot;请选择发放用户&quot;</span>);</span><br><span class="line">                  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span>(!$(<span class="string">&quot;#couponid&quot;</span>).val())&#123;</span><br><span class="line">                  Toastr.error(<span class="string">&quot;请选择发放卡券&quot;</span>);</span><br><span class="line">                  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="完整-示例代码"><a href="#完整-示例代码" class="headerlink" title="完整 示例代码"></a>完整 示例代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">columns: [</span><br><span class="line">                [</span><br><span class="line">                    &#123;checkbox: true&#125;,</span><br><span class="line">                    &#123;field: &#x27;id&#x27;, title: &quot;ID&quot;,operate: false&#125;,</span><br><span class="line">                    &#123;field: &#x27;account&#x27;, title: &quot;账号&quot;, operate: &#x27;like&#x27;&#125;,</span><br><span class="line">                    &#123;field: &#x27;school.school_name&#x27;, title: &quot;学校&quot;, operate: &#x27;like&#x27;&#125;,</span><br><span class="line">                    &#123;field: &#x27;balance&#x27;, title: &quot;余额/元&quot;, operate: false&#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        field: &#x27;status&#x27;, title: &#x27;状态&#x27;,operate: false, formatter: function (value) &#123;</span><br><span class="line">                            if (value == 0) &#123;</span><br><span class="line">                                return &quot;已签约&quot;;</span><br><span class="line">                            &#125; else if (value == 1) &#123;</span><br><span class="line">                                return &quot;未签约&quot;;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        field: &#x27;operate&#x27;, title: __(&#x27;Operate&#x27;), table: table,</span><br><span class="line">                        events: Table.api.events.operate,</span><br><span class="line">                        buttons: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                name: &#x27;changerecord&#x27;,</span><br><span class="line">                                text: &#x27;动账记录查询&#x27;,</span><br><span class="line">                                icon: &#x27;fa fa-search&#x27;,</span><br><span class="line">                                classname: &#x27;btn btn-info btn-xs btn-dialog&#x27;,</span><br><span class="line">                                url: &#x27;cms/bank/changeRecord&#x27;</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                name: &#x27;freezerecord&#x27;,</span><br><span class="line">                                text: &#x27;冻结/解冻记录&#x27;,</span><br><span class="line">                                icon: &#x27;fa fa-search&#x27;,</span><br><span class="line">                                classname: &#x27;btn btn-info btn-xs btn-detail btn-dialog&#x27;,</span><br><span class="line">                                url: &#x27;cms/bank/freezeRecord&#x27;,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                name: &#x27;balance&#x27;,</span><br><span class="line">                                text: &#x27;查询余额&#x27;,</span><br><span class="line">                                icon: &#x27;fa fa-search&#x27;,</span><br><span class="line">                                classname: &#x27;btn btn-info btn-xs btn-balance&#x27;,</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                name: &#x27;qy&#x27;,</span><br><span class="line">                                text: &#x27;签约&#x27;,</span><br><span class="line">                                icon: &#x27;fa fa-search&#x27;,</span><br><span class="line">                                classname: &#x27;btn btn-info btn-xs btn-success btn-ajax&#x27;,</span><br><span class="line">                                url: &#x27;cms/bank/sign&#x27;,</span><br><span class="line">                                visible: function (row) &#123;</span><br><span class="line">                                    if (row.status == 1) &#123;</span><br><span class="line">                                        return true;</span><br><span class="line">                                    &#125; else &#123;</span><br><span class="line">                                        return false;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;,</span><br><span class="line">                                success: function (data, ret) &#123;</span><br><span class="line">                                    $(&quot;a.btn-refresh&quot;).trigger(&quot;click&quot;);</span><br><span class="line">                                    layer.alert(ret.msg);</span><br><span class="line">                                    //如果需要阻止成功提示，则必须使用return false;</span><br><span class="line">                                    //return false;</span><br><span class="line">                                &#125;,</span><br><span class="line">                                error: function (data, ret) &#123;</span><br><span class="line">                                    console.log(data, ret);</span><br><span class="line">                                    layer.alert(ret.msg);</span><br><span class="line">                                    return false;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                name: &#x27;jy&#x27;,</span><br><span class="line">                                text: &#x27;解约&#x27;,</span><br><span class="line">                                icon: &#x27;fa fa-search&#x27;,</span><br><span class="line">                                classname: &#x27;btn btn-info btn-xs btn-danger btn-ajax&#x27;,</span><br><span class="line">                                url: &#x27;cms/bank/unwind&#x27;,</span><br><span class="line">                                visible: function (row) &#123;</span><br><span class="line">                                    if (row.status == 0) &#123;</span><br><span class="line">                                        return true;</span><br><span class="line">                                    &#125; else &#123;</span><br><span class="line">                                        return false;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;,</span><br><span class="line">                                confirm: &#x27;确定要解约吗?&#x27;,</span><br><span class="line">                                success: function (data, ret) &#123;</span><br><span class="line">                                    $(&quot;a.btn-refresh&quot;).trigger(&quot;click&quot;);</span><br><span class="line">                                    layer.alert(ret.msg);</span><br><span class="line"></span><br><span class="line">                                    //如果需要阻止成功提示，则必须使用return false;</span><br><span class="line">                                    //return false;</span><br><span class="line">                                &#125;,</span><br><span class="line">                                error: function (data, ret) &#123;</span><br><span class="line">                                    console.log(data, ret);</span><br><span class="line">                                    layer.alert(ret.msg);</span><br><span class="line">                                    return false;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line">                                name: &#x27;dj&#x27;,</span><br><span class="line">                                text: &#x27;冻结&#x27;,</span><br><span class="line">                                icon: &#x27;fa fa-search&#x27;,</span><br><span class="line">                                classname: &#x27;btn btn-info btn-xs btn-danger btn-ajax&#x27;,</span><br><span class="line">                                url: &#x27;cms/bank/frozen&#x27;,</span><br><span class="line">                                confirm: &#x27;确定要冻结吗?&#x27;,</span><br><span class="line">                                success: function (data, ret) &#123;</span><br><span class="line">                                    $(&quot;a.btn-refresh&quot;).trigger(&quot;click&quot;);</span><br><span class="line">                                    layer.alert(ret.msg);</span><br><span class="line"></span><br><span class="line">                                    //如果需要阻止成功提示，则必须使用return false;</span><br><span class="line">                                    //return false;</span><br><span class="line">                                &#125;,</span><br><span class="line">                                error: function (data, ret) &#123;</span><br><span class="line">                                    console.log(data, ret);</span><br><span class="line">                                    layer.alert(ret.msg);</span><br><span class="line">                                    return false;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                            &#125;,</span><br><span class="line">                         &#123;</span><br><span class="line">                            name: &#x27;edit&#x27;,</span><br><span class="line">                            icon: &#x27;fa fa-pencil&#x27;,</span><br><span class="line">                            title: __(&#x27;Edit&#x27;),</span><br><span class="line">                            extend: &#x27;data-toggle=&quot;tooltip&quot;&#x27;,</span><br><span class="line">                            classname: &#x27;btn btn-xs btn-success btn-editone&#x27;,</span><br><span class="line">                            visible: function (row) &#123;</span><br><span class="line">                                return row.status === 0;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            name: &#x27;del&#x27;,</span><br><span class="line">                            icon: &#x27;fa fa-trash&#x27;,</span><br><span class="line">                            title: __(&#x27;Del&#x27;),</span><br><span class="line">                            extend: &#x27;data-toggle=&quot;tooltip&quot;&#x27;,</span><br><span class="line">                            classname: &#x27;btn btn-xs btn-danger btn-delone&#x27;,</span><br><span class="line">                            visible: function (row) &#123;</span><br><span class="line">                                return row.status === 0;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ], formatter: Table.api.formatter.operate&#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                ]</span><br><span class="line">            ]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自定义弹框效果按钮&quot;&gt;&lt;a href=&quot;#自定义弹框效果按钮&quot; class=&quot;headerlink&quot; title=&quot;自定义弹框效果按钮&quot;&gt;&lt;/a&gt;自定义弹框效果按钮&lt;/h1&gt;&lt;p&gt;classname字段控制 btn-dialog&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>php开发-fastadmin键值组件(Fieldlist)</title>
    <link href="http://example.com/posts/c70fd524.html"/>
    <id>http://example.com/posts/c70fd524.html</id>
    <published>2024-08-08T11:56:55.000Z</published>
    <updated>2024-08-08T12:10:20.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="fieldlist中有select"><a href="#fieldlist中有select" class="headerlink" title="fieldlist中有select"></a>fieldlist中有select</h1><p>selectpicker貌似不兼容的<br>模版语法 art-template<br>edit 页面select默认选中值 [先执行php代码 最后js取渲染模版的]</p><p>art-template中使用if</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">if</span>(…)&#123;%&gt;  html  &lt;%&#125;<span class="keyword">else</span>&#123;%&gt; html  &lt;%&#125;%&gt;</span><br></pre></td></tr></table></figure><p>edit页面 代码示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/html&quot;</span> <span class="attr">id</span>=<span class="string">&quot;testtpl&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">&quot;form-inline&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;row[&lt;%=name%&gt;][&lt;%=index%&gt;][id]&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;%=row[&#x27;id&#x27;]%&gt;&quot;</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">select</span>   <span class="attr">data-id</span>=<span class="string">&quot;&lt;%=index%&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;couponname form-control&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;row[&lt;%=name%&gt;][&lt;%=index%&gt;][coupon_id]&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 111px&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             &lt;?php</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                                         foreach($coupon as $vo)&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                                            echo &#x27;<span class="tag">&lt;<span class="name">option</span> <span class="attr">name</span>=<span class="string">&quot;&#x27;.$vo[&#x27;name&#x27;].&#x27;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#x27;.$vo[&#x27;id&#x27;].&#x27;&quot;</span>     &lt;% <span class="attr">if</span> (<span class="attr">row</span>[&quot;<span class="attr">coupon_id</span>&quot;]&amp;&amp;<span class="attr">row</span>[&quot;<span class="attr">coupon_id</span>&quot;]<span class="attr">.indexOf</span>(&quot;&#x27;<span class="attr">.</span>$<span class="attr">vo</span>[&quot;<span class="attr">id</span>&quot;]<span class="attr">.</span>&#x27;&quot;)&gt;</span>-1) &#123; %&gt; selected &lt;% &#125; %&gt;     &gt;&#x27;.$vo[&#x27;name&#x27;].&#x27;<span class="tag">&lt;/<span class="name">option</span>&gt;</span>&#x27;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             ?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;-1&quot;</span>&gt;</span>谢谢参与<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>   <span class="attr">id</span>=<span class="string">&quot;num&lt;%=index%&gt;&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;row[&lt;%=name%&gt;][&lt;%=index%&gt;][num]&quot;</span> <span class="attr">readonly</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;%=row[&#x27;num&#x27;]%&gt;&quot;</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;row[&lt;%=name%&gt;][&lt;%=index%&gt;][scale]&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;%=row[&#x27;scale&#x27;]%&gt;&quot;</span> <span class="attr">size</span>=<span class="string">&quot;1&quot;</span>&gt;</span>%</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&lt;%=name%&gt;[&lt;%=index%&gt;][icon]&quot;</span> <span class="attr">id</span>=<span class="string">&quot;c-downloadurl-&lt;%=index%&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;%=row.icon%&gt;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:140px;&quot;</span>/&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-group&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">             <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;plupload-downloadurl-&lt;%=index%&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger plupload&quot;</span> <span class="attr">data-input-id</span>=<span class="string">&quot;c-downloadurl-&lt;%=index%&gt;&quot;</span> <span class="attr">data-mimetype</span>=<span class="string">&quot;*&quot;</span> <span class="attr">data-multiple</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-upload&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">     <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"> </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;fieldlist中有select&quot;&gt;&lt;a href=&quot;#fieldlist中有select&quot; class=&quot;headerlink&quot; title=&quot;fieldlist中有select&quot;&gt;&lt;/a&gt;fieldlist中有select&lt;/h1&gt;&lt;p&gt;selectpick</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>sftp配置</title>
    <link href="http://example.com/posts/8e2962f3.html"/>
    <id>http://example.com/posts/8e2962f3.html</id>
    <published>2024-08-02T02:34:24.000Z</published>
    <updated>2024-08-02T06:48:15.682Z</updated>
    
    <content type="html"><![CDATA[<p>vim /etc/ssh/ssh_config</p><p>Subsystem sftp internal-sftp<br>Match Group sftp<br>        ChrootDirectory /www/wwwroot/ftp_ip_user<br>        X11Forwarding no<br>        AllowTcpForwarding no<br>        ForceCommand internal-sftp</p><p>fatal: bad ownership or modes for chroot directory “/www/wwwroot/ftp_ip_user” </p><p>这个错误通常发生在使用SSH服务进行远程登录时，特别是当你尝试为特定用户设置chroot环境时。chroot是一种安全机制，它将用户的根目录更改为另一个目录，从而限制用户只能在该目录及其子目录下操作。报错信息fatal: bad ownership or modes意味着chroot目录的所有权或权限设置不正确，SSH服务无法以安全的方式访问该目录。</p><p>问题解决：</p><p>检查/www/wwwroot/ftp_ip_user目录的所有权和权限。它应该只有root用户有写权限。可以使用以下命令来修复：</p><p>sudo chown root:root /www/wwwroot/ftp_ip_user<br>sudo chmod 0755 /www/wwwroot/ftp_ip_user</p><p>确保目录中没有任何不必要的文件或目录，特别是不应该有写权限给其他用户。</p><p>如果你使用的是sshd_config文件中的ChrootDirectory指令，确保指定的目录是你想要chroot jail的目录。</p><p>如果你在使用sftp服务，确保sshd_config文件中的Subsystem sftp指令指向正确的internal-sftp路径。</p><p>重启SSH服务以使更改生效。</p><p>如果问题依然存在，检查系统日志以获取更多信息，可能会有额外的线索</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vim /etc/ssh/ssh_config&lt;/p&gt;
&lt;p&gt;Subsystem sftp internal-sftp&lt;br&gt;Match Group sftp&lt;br&gt;        ChrootDirectory /www/wwwroot/ftp_ip_user&lt;br&gt;  </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>mysql-主从数据库</title>
    <link href="http://example.com/posts/585d050b.html"/>
    <id>http://example.com/posts/585d050b.html</id>
    <published>2024-07-23T02:33:22.000Z</published>
    <updated>2024-07-24T02:41:14.959Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql主从的应用"><a href="#mysql主从的应用" class="headerlink" title="mysql主从的应用"></a>mysql主从的应用</h1><h2 id="用来数据迁移"><a href="#用来数据迁移" class="headerlink" title="用来数据迁移"></a>用来数据迁移</h2><pre><code>开启主从同步，将数据导入主节点，让从节点同步；将数据分别导入主从节点，让主从节点数据一致后，建立连接，开启同步</code></pre><h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><h2 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h2><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="主节点配置"><a href="#主节点配置" class="headerlink" title="主节点配置"></a>主节点配置</h2><h3 id="主节点-my-cnf配置"><a href="#主节点-my-cnf配置" class="headerlink" title="主节点 my.cnf配置"></a>主节点 my.cnf配置</h3><pre><code>my.cnf  mysqld    # 开启日志general_log = 1general_log_file = mysql.log# 主从复制配置server-id = 1# binlog日志格式，mysql默认采用statement，建议使用mixed# STATEMENT模式（SBR）# 每一条会修改数据的sql语句会记录到binlog中。优点是并不需要记录每一条sql语句和每一行的数据变化，减少了binlog日志量，节约IO，提高性能。缺点是在某些情况下会导致master-slave中的数据不一致(如sleep()函数， last_insert_id()，以及user-defined functions(udf)等会出现问题)# ROW模式（RBR）# 不记录每条sql语句的上下文信息，仅需记录哪条数据被修改了，修改成什么样了。而且不会出现某些特定情况下的存储过程、或function、或trigger的调用和触发无法被正确复制的问题。缺点是会产生大量的日志，尤其是alter table的时候会让日志暴涨。# MIXED模式（MBR）# 以上两种模式的混合使用，一般的复制使用STATEMENT模式保存binlog，对于STATEMENT模式无法复制的操作使用ROW模式保存binlog，MySQL会根据执行的SQL语句选择日志保存方式。binlog_format= MIXED# binlog日志文件log-bin=mysql-bin# 是否只读，1 代表只读，0代表读写，主数据库需要读写，设置0read-only=0# binlog过期清理时间expire_logs_days=7# binlog每个日志文件大小max_binlog_size= 100m# binlog缓存大小binlog_cache_size= 4m# 最大binlog缓存大小max_binlog_cache_size= 512m</code></pre><h3 id="相关sql操作"><a href="#相关sql操作" class="headerlink" title="相关sql操作"></a>相关sql操作</h3><pre><code>## 创建dd用户 授权只能ip 192.168.227.134 访问 密码设置为123456CREATE USER &#39;dd&#39;@&#39;192.168.227.134&#39; IDENTIFIED BY &#39;123456&#39;;## 设置一个从服务器（slave）来复制主服务器（master）的数据权限GRANT REPLICATION SLAVE ON *.* TO &#39;dd&#39;@&#39;192.168.227.134&#39;;show master status </code></pre><h3 id="从节点-my-cnf配置"><a href="#从节点-my-cnf配置" class="headerlink" title="从节点 my.cnf配置"></a>从节点 my.cnf配置</h3><pre><code>server-id=2#它指定了从服务器（slave）用于存储从中继日志（relay logs）#中读取并准备应用于本地数据库的事件的文件的路径和名称模式。relay-log=mysql-relay-binsql//配置并启动主从复制change master to    -&gt; master_host=&#39;192.168.227.133&#39;,        #主的ip地址    -&gt; master_user=&#39;dd&#39;,                    #创建的用户名    -&gt; master_password=&#39;123456&#39;,            #创建的密码    -&gt; master_log_file=&#39;mysql-bin.000001&#39;,    #日志文件    -&gt; master_log_pos=328;                    #数据的最新位置//开启奴隶模式start slave;    show slave status </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mysql主从的应用&quot;&gt;&lt;a href=&quot;#mysql主从的应用&quot; class=&quot;headerlink&quot; title=&quot;mysql主从的应用&quot;&gt;&lt;/a&gt;mysql主从的应用&lt;/h1&gt;&lt;h2 id=&quot;用来数据迁移&quot;&gt;&lt;a href=&quot;#用来数据迁移&quot; class=&quot;</summary>
      
    
    
    
    <category term="服务器相关" scheme="http://example.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>php开发-微信登录</title>
    <link href="http://example.com/posts/77054df3.html"/>
    <id>http://example.com/posts/77054df3.html</id>
    <published>2024-07-04T11:52:39.000Z</published>
    <updated>2024-07-04T11:54:33.210Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>nginx配置-rewrite</title>
    <link href="http://example.com/posts/a0181459.html"/>
    <id>http://example.com/posts/a0181459.html</id>
    <published>2024-06-29T04:04:32.000Z</published>
    <updated>2024-06-29T05:53:35.969Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rewrite-作用"><a href="#rewrite-作用" class="headerlink" title="rewrite 作用"></a>rewrite 作用</h1><p>用于实现URL的重写，URL的重写是非常有用的功能，<br>比如它可以在我们改变网站结构之后，不需要客户端修改原来的书签，<br>也无需其他网站修改我们的链接，就可以设置为自动访问，另外还可以在一定程度上提高网站的安全性</p><p>示例<br>浏览器访问url <a href="http://www.example.com/abc/file/a.jpg">http://www.example.com/abc/file/a.jpg</a><br>实际访问 <a href="http://www.example.com/bb/a.jpg">http://www.example.com/bb/a.jpg</a></p><p>浏览器访问url <a href="http://www.example.com/index/abc.html">http://www.example.com/index/abc.html</a><br>实际访问 <a href="http://www.example.com/index.php?r=index/abc">http://www.example.com/index.php?r=index/abc</a></p><h1 id="rewrite应用场景"><a href="#rewrite应用场景" class="headerlink" title="rewrite应用场景"></a>rewrite应用场景</h1><p>1、URL看起来更规范、合理<br>2、企业会将动态URL地址伪装成静态地址提供服务<br>3、网址换新域名后，让旧的访问跳转到新的域名上<br>4、服务端某些业务调整</p><h1 id="rewrite调试"><a href="#rewrite调试" class="headerlink" title="rewrite调试"></a>rewrite调试</h1><p>rewrite 日志记录指令<br>指令    rewrite_log<br>作用域 http, server, location<br>指令值选项    on 或 off<br>当指令值为 on 时，rewrite 的执行结果会以 notice 级别记录到 Nginx 的 error 日志文件中</p><p>示例：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">      <span class="attribute">rewrite_log</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="nginx正则表达式"><a href="#nginx正则表达式" class="headerlink" title="nginx正则表达式"></a>nginx正则表达式</h1><p>常用的正则表达式元字符<br>^：匹配输入字符串的起始位置<br>$：匹配输入字符串的结束位置<br>*****：匹配前面的字符零次或多次<br>+：匹配前面的字符一次或多次<br>?：匹配前面的字符零次或一次<br>.：匹配除\n之外的任何单个字符 使用[.\n]可以匹配包括\n在内的任意字符<br>****：转义符<br>\d：匹配纯数字<br>{n}：重复n次<br>{n,}：重复n次或更多次<br>[c]：匹配单个字符c<br>[a-z]：匹配a-z小写字母的任意一个<br>[a-zA-Z]：匹配a-z小写字母或A-Z大写字母的任意一个<br>（）：表达式的开始和结束位置<br>|：或运算符</p><h1 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h1><pre><code>location ~* .*\.(mp4|avi|wmv|mpg|flv|rm|mov) &#123;    add_header Accept-Ranges bytes;  if ($request_uri ~* ^(.*)file/Image/annex/(.*)/(.*))&#123;    set $file_name $3;    rewrite (.*) $scheme://$host/$file_name;  &#125;  #视频保存的目录  root /www/wwwroot/tjproject-resources/WebAnnexFile/451772413496005765/;  mp4;  mp4_buffer_size 1m;#处理mp4初始内存大小  mp4_max_buffer_size 50m;#处理mp4最大内存大小&#125;location ~ .*\.(mp4|avi|wmv|mpg|flv|rm|mov) &#123;  if ($request_uri ~* ^/monitor_videos/(.*))&#123;    set $file_name $1;    rewrite (.*) $scheme://$host/$file_name;  &#125;  # #视频保存的目录  root /www/wwwroot/aigis_resources_yzc/monitor_videos/;  mp4;  mp4_buffer_size 1m;#处理mp4初始内存大小  mp4_max_buffer_size 50m;#处理mp4最大内存大小&#125;location ~* /upload/。*\.php$&#123;    rewrite (.+) http://www.index.com permanent&#125;server &#123;     listen 80;     server_name example.com www.example.com;         if ($server_port !~ 443)&#123;         rewrite ^(/.*)$ https://$host$1 permanent;         &#125;         # 其他配置... &#125;if ($scheme = http ) &#123;    return 301 https://$host$request_uri;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;rewrite-作用&quot;&gt;&lt;a href=&quot;#rewrite-作用&quot; class=&quot;headerlink&quot; title=&quot;rewrite 作用&quot;&gt;&lt;/a&gt;rewrite 作用&lt;/h1&gt;&lt;p&gt;用于实现URL的重写，URL的重写是非常有用的功能，&lt;br&gt;比如它可以在我们</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>gitlab备份恢复</title>
    <link href="http://example.com/posts/6551734d.html"/>
    <id>http://example.com/posts/6551734d.html</id>
    <published>2024-06-28T14:14:05.000Z</published>
    <updated>2024-07-01T06:06:34.510Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gitlab-备份命令"><a href="#gitlab-备份命令" class="headerlink" title="gitlab 备份命令"></a>gitlab 备份命令</h1><h2 id="通过源码安装-备份命令"><a href="#通过源码安装-备份命令" class="headerlink" title="通过源码安装-备份命令"></a>通过源码安装-备份命令</h2><p>bundle exec rake gitlab:backup:create RAILS_ENV=production</p><pre><code>注   bundle exec 是一个用于执行 Rails 或其他 Ruby 项目的命令     bundle exec rake  是一个用于执行 Ruby on Rails 项目中的 Rake 任务的命令。     Rake 是 Ruby 中一个构建工具，用于自动化任务、数据库迁移、部署等操作          bundle exec rails s     这会在 Rails 项目中启动一个本地服务器               </code></pre><h2 id="有gitlab-rake-命令工具"><a href="#有gitlab-rake-命令工具" class="headerlink" title="有gitlab-rake 命令工具"></a>有gitlab-rake 命令工具</h2><p>gitlab-rake gitlab:backup:create</p><h2 id="安装在docker中-可以用"><a href="#安装在docker中-可以用" class="headerlink" title="安装在docker中 可以用"></a>安装在docker中 可以用</h2><p>后台运行<br>sudo docker exec -d a51fe5f513bc bundle exec rake gitlab:backup:create RAILS_ENV=production</p><p>sudo docker exec a51fe5f513bc  /bin/bash -c “bundle exec rake gitlab:backup:create RAILS_ENV=production”</p><h1 id="备份所在目录"><a href="#备份所在目录" class="headerlink" title="备份所在目录"></a>备份所在目录</h1><p>通常在/var/opt/gitlab/backups目录下</p><p>在gitlab 目录下 config/gitlab.yml 有个</p><p>backup:<br>    path: “/home/git/data/backups” </p><h1 id="恢复备份"><a href="#恢复备份" class="headerlink" title="恢复备份"></a>恢复备份</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gitlab-备份命令&quot;&gt;&lt;a href=&quot;#gitlab-备份命令&quot; class=&quot;headerlink&quot; title=&quot;gitlab 备份命令&quot;&gt;&lt;/a&gt;gitlab 备份命令&lt;/h1&gt;&lt;h2 id=&quot;通过源码安装-备份命令&quot;&gt;&lt;a href=&quot;#通过源码安装</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>php开发-fastadmin按钮弹框传数据到列表</title>
    <link href="http://example.com/posts/6df754b5.html"/>
    <id>http://example.com/posts/6df754b5.html</id>
    <published>2024-06-28T14:13:59.000Z</published>
    <updated>2024-08-08T11:55:40.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、实现效果"><a href="#一、实现效果" class="headerlink" title="一、实现效果"></a>一、实现效果</h1><p>点击按钮 弹出选项列表，选择列表通过table 实现的<br>难点：<br>     1.点击弹框url中传值 怎么传到列表请求中，因为table 数据是通过ajax 试下的，就麻烦了<br>     2.点击选择按钮的实现 数据的回传 接收处理</p><p><img src="../pic/dialogbox.png" alt="lena"></p><h1 id="二、按钮页面-js代码"><a href="#二、按钮页面-js代码" class="headerlink" title="二、按钮页面 js代码"></a>二、按钮页面 js代码</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#select-coupon-btn&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            parent.Fast.api.open(<span class="string">&quot;wanlshop/street_coupon/select?select_use_type=2&quot;</span>, __(<span class="string">&#x27;选择卡券&#x27;</span>), &#123;</span><br><span class="line">                <span class="attr">area</span>: [<span class="string">&#x27;800px&#x27;</span>, <span class="string">&#x27;600px&#x27;</span>],</span><br><span class="line">                <span class="attr">callback</span>: <span class="function">(<span class="params">data</span>)=&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(data)&#123;</span><br><span class="line">                        $(<span class="string">&quot;#coupon-table tbody tr&quot;</span>).last().remove();</span><br><span class="line">                        $(<span class="string">&quot;#send_gift&quot;</span>).val(data.id);</span><br><span class="line">                        <span class="keyword">if</span> (data.grant == -<span class="number">1</span>) &#123;</span><br><span class="line">                            data.grant = <span class="string">&quot;不限&quot;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        $(<span class="string">&quot;#coupon-table tbody&quot;</span>).last().append(<span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>+data.name+<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>+data.type+<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>+data.grant+<span class="string">&quot;&lt;/td&gt;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、弹框页面"><a href="#三、弹框页面" class="headerlink" title="三、弹框页面"></a>三、弹框页面</h1><p>通过Fast.api.query(‘select_use_type’); 获取 然后加到ajax请求中</p><p>弹框页面js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">select</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 初始化表格参数配置</span></span><br><span class="line">    Table.api.init(&#123;</span><br><span class="line">        <span class="attr">extend</span>: &#123;</span><br><span class="line">            <span class="attr">index_url</span>: <span class="string">&#x27;wanlshop/street_coupon/select&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> urlArr = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> table = $(<span class="string">&quot;#table&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多选的 操作</span></span><br><span class="line">    table.on(<span class="string">&#x27;check.bs.table uncheck.bs.table check-all.bs.table uncheck-all.bs.table&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e, row</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e.type == <span class="string">&#x27;check&#x27;</span> || e.type == <span class="string">&#x27;uncheck&#x27;</span>) &#123;</span><br><span class="line">            row = [row];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            urlArr = [];</span><br><span class="line">        &#125;</span><br><span class="line">        $.each(row, <span class="function"><span class="keyword">function</span> (<span class="params">i, j</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e.type.indexOf(<span class="string">&quot;uncheck&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> index = urlArr.indexOf(j.id);</span><br><span class="line">                <span class="keyword">if</span> (index &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">                    urlArr.splice(index, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                urlArr.indexOf(j.id) == -<span class="number">1</span> &amp;&amp; urlArr.push(j.id);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化表格</span></span><br><span class="line">    table.bootstrapTable(&#123;</span><br><span class="line">        <span class="attr">url</span>: $.fn.bootstrapTable.defaults.extend.index_url,</span><br><span class="line">        <span class="attr">sortName</span>: <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">        <span class="attr">showToggle</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">showExport</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//是否显示右上角的搜索框</span></span><br><span class="line">        <span class="attr">search</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">//控制显示列开关</span></span><br><span class="line">        <span class="attr">showColumns</span>:<span class="literal">false</span>,</span><br><span class="line">        <span class="comment">//显示搜索字段框</span></span><br><span class="line">        <span class="attr">searchFormVisible</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">showExport</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">columns</span>: [</span><br><span class="line">            [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">field</span>: <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">                    <span class="attr">title</span>: __(<span class="string">&#x27;Type&#x27;</span>),</span><br><span class="line">                    <span class="attr">searchList</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;reduction&quot;</span>: <span class="string">&quot;满减券&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;discount&quot;</span>: <span class="string">&quot;折扣券&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;daijin&quot;</span>: <span class="string">&quot;代金券&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;stopcar&quot;</span>: <span class="string">&quot;停车券&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;gift&quot;</span>: <span class="string">&quot;礼品券&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">formatter</span>: Table.api.formatter.normal</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;<span class="attr">field</span>: <span class="string">&#x27;name&#x27;</span>, <span class="attr">title</span>: __(<span class="string">&#x27;Name&#x27;</span>), <span class="attr">operate</span>: <span class="string">&#x27;LIKE&#x27;</span>&#125;,</span><br><span class="line">                &#123;<span class="attr">field</span>: <span class="string">&#x27;drawlimit&#x27;</span>, <span class="attr">title</span>: __(<span class="string">&#x27;Drawlimit&#x27;</span>)&#125;,</span><br><span class="line">                &#123;<span class="attr">field</span>: <span class="string">&#x27;grant&#x27;</span>, <span class="attr">title</span>: __(<span class="string">&#x27;Grant&#x27;</span>), <span class="attr">operate</span>: <span class="string">&#x27;LIKE&#x27;</span>,<span class="attr">formatter</span>: Controller.api.formatter.grant&#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">field</span>: <span class="string">&#x27;operate&#x27;</span>, <span class="attr">title</span>: __(<span class="string">&#x27;Operate&#x27;</span>), <span class="attr">events</span>: &#123;</span><br><span class="line">                        <span class="string">&#x27;click .btn-chooseone&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, value, row, index</span>) </span>&#123;</span><br><span class="line">                            <span class="comment">// var multiple = Backend.api.query(&#x27;multiple&#x27;);</span></span><br><span class="line">                            <span class="comment">// multiple = multiple == &#x27;true&#x27; ? true : false;</span></span><br><span class="line">                            Fast.api.close(&#123;</span><br><span class="line">                                <span class="attr">id</span>: row.id,</span><br><span class="line">                                <span class="attr">name</span>: row.name,</span><br><span class="line">                                <span class="attr">type</span>: row.type_text,</span><br><span class="line">                                <span class="attr">drawlimit</span>: row.drawlimit,</span><br><span class="line">                                <span class="attr">grant</span>: row.grant</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;, <span class="attr">formatter</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&#x27;&lt;a href=&quot;javascript:;&quot; class=&quot;btn btn-danger btn-chooseone btn-xs&quot;&gt;&lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt; &#x27;</span> + __(<span class="string">&#x27;Choose&#x27;</span>) + <span class="string">&#x27;&lt;/a&gt;&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">queryParams</span>: <span class="function"><span class="keyword">function</span>(<span class="params">params</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> filter = <span class="built_in">JSON</span>.parse(params.filter);</span><br><span class="line">            <span class="keyword">var</span> op = <span class="built_in">JSON</span>.parse(params.op);</span><br><span class="line">            <span class="keyword">var</span> select_use_type = Fast.api.query(<span class="string">&#x27;select_use_type&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (select_use_type != <span class="literal">null</span>)&#123;</span><br><span class="line">                filter.use_type= select_use_type;</span><br><span class="line">                op.use_type = <span class="string">&quot;=&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            params.filter = <span class="built_in">JSON</span>.stringify(filter);</span><br><span class="line">            params.op = <span class="built_in">JSON</span>.stringify(op);</span><br><span class="line">            <span class="keyword">return</span> params;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 为表格绑定事件</span></span><br><span class="line">    Table.api.bindevent(table);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>后端代码 parent::index() 代码服务一份相应控制器就好了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、实现效果&quot;&gt;&lt;a href=&quot;#一、实现效果&quot; class=&quot;headerlink&quot; title=&quot;一、实现效果&quot;&gt;&lt;/a&gt;一、实现效果&lt;/h1&gt;&lt;p&gt;点击按钮 弹出选项列表，选择列表通过table 实现的&lt;br&gt;难点：&lt;br&gt;     1.点击弹框url中传</summary>
      
    
    
    
    <category term="PHP开发" scheme="http://example.com/categories/PHP%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>windows2012-R2发布asp网站</title>
    <link href="http://example.com/posts/dd0146de.html"/>
    <id>http://example.com/posts/dd0146de.html</id>
    <published>2024-06-25T12:22:20.000Z</published>
    <updated>2024-06-29T06:03:45.280Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-、安装asp-net-3-5-总是失败"><a href="#一-、安装asp-net-3-5-总是失败" class="headerlink" title="一 、安装asp.net 3.5 总是失败"></a>一 、安装asp.net 3.5 总是失败</h1><p>卸载相关补丁KB5027141  KB5028872  KB5028970  KB5029915<br><img src="../pic/win2012-net.png" alt="lena"></p><h1 id="二、-应用程序池"><a href="#二、-应用程序池" class="headerlink" title="二、 应用程序池"></a>二、 应用程序池</h1><pre><code>设置为 集成  2.0 的版本【安装.net 3.5 后 这边就是只有2.0的选项哦】</code></pre><h1 id="三、总是显示500，开启报错-方便调试"><a href="#三、总是显示500，开启报错-方便调试" class="headerlink" title="三、总是显示500，开启报错 方便调试"></a>三、总是显示500，开启报错 方便调试</h1><p>双击ASP 设置</p><pre><code>将错误发送到浏览器  true</code></pre><p><img src="../pic/iis-2.png" alt="lena">  </p><h1 id="四、设置文件夹权限"><a href="#四、设置文件夹权限" class="headerlink" title="四、设置文件夹权限"></a>四、设置文件夹权限</h1><p> everyone  读写就可以了</p><p> <img src="../pic/win2012-1.png" alt="lena">     </p><h1 id="五、Win2012-Microsoft-JET-Database-Engine-错误-‘80004005’"><a href="#五、Win2012-Microsoft-JET-Database-Engine-错误-‘80004005’" class="headerlink" title="五、Win2012  Microsoft JET Database Engine 错误 ‘80004005’"></a>五、Win2012  Microsoft JET Database Engine 错误 ‘80004005’</h1><pre><code>access 数据库没有权限访问设置c:/windows/temp或者%windir%/temp/erveryone  读写权限就可以了</code></pre><h1 id="六、IIS给网站配置https证书"><a href="#六、IIS给网站配置https证书" class="headerlink" title="六、IIS给网站配置https证书"></a>六、IIS给网站配置https证书</h1><h2 id="6-1导入入证书"><a href="#6-1导入入证书" class="headerlink" title="6.1导入入证书"></a>6.1导入入证书</h2><p><img src="../pic/iis-3.png" alt="lena"></p><h2 id="6-2配置证书"><a href="#6-2配置证书" class="headerlink" title="6.2配置证书"></a>6.2配置证书</h2><p><img src="../pic/iis-1.png" alt="lena"></p><h1 id="七、IIS限制上传配置"><a href="#七、IIS限制上传配置" class="headerlink" title="七、IIS限制上传配置"></a>七、IIS限制上传配置</h1><p>修改ASP 配置中 限制属性<br><img src="../pic/iis8-file-3.png" alt="lena"></p><p>网站中的配置修改(没配置项，可不配置)<br>在“节”选项下找到system.webServer/security/requestFiltering节。<br><img src="../pic/iis8-file-1.png" alt="lena"></p><p><img src="../pic/iis8-file-2.png" alt="lena"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-、安装asp-net-3-5-总是失败&quot;&gt;&lt;a href=&quot;#一-、安装asp-net-3-5-总是失败&quot; class=&quot;headerlink&quot; title=&quot;一 、安装asp.net 3.5 总是失败&quot;&gt;&lt;/a&gt;一 、安装asp.net 3.5 总是失败&lt;/</summary>
      
    
    
    
    <category term="服务器相关" scheme="http://example.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>php开发-php-fpm进程被占满</title>
    <link href="http://example.com/posts/9b3ce30d.html"/>
    <id>http://example.com/posts/9b3ce30d.html</id>
    <published>2024-06-24T06:47:51.000Z</published>
    <updated>2024-06-24T06:48:41.647Z</updated>
    
    
    
    
    <category term="PHP开发" scheme="http://example.com/categories/PHP%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="PHP开发" scheme="http://example.com/tags/PHP%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>php开发-swoole框架</title>
    <link href="http://example.com/posts/ab7af144.html"/>
    <id>http://example.com/posts/ab7af144.html</id>
    <published>2024-06-13T01:11:33.000Z</published>
    <updated>2024-06-24T06:48:41.649Z</updated>
    
    
    
    
    <category term="PHP开发" scheme="http://example.com/categories/PHP%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="PHP开发" scheme="http://example.com/tags/PHP%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>php开发-websocket</title>
    <link href="http://example.com/posts/cab3e457.html"/>
    <id>http://example.com/posts/cab3e457.html</id>
    <published>2024-06-13T01:10:14.000Z</published>
    <updated>2024-06-24T06:48:41.646Z</updated>
    
    
    
    
    <category term="PHP开发" scheme="http://example.com/categories/PHP%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="PHP开发" scheme="http://example.com/tags/PHP%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>php开发-Tcp连接</title>
    <link href="http://example.com/posts/680ac944.html"/>
    <id>http://example.com/posts/680ac944.html</id>
    <published>2024-06-13T01:09:50.000Z</published>
    <updated>2024-08-12T03:34:37.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="封装的连接类"><a href="#封装的连接类" class="headerlink" title="封装的连接类"></a>封装的连接类</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SimpleSocket</span>;</span><br><span class="line"></span><br><span class="line">set_error_handler(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">ErrorException</span>(<span class="variable">$errstr</span>, <span class="variable">$errno</span>, <span class="number">0</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Connector</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$_socket</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connectTcp</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$address</span>, <span class="keyword">int</span> <span class="variable">$port</span>, <span class="keyword">int</span> <span class="variable">$timeout</span> = <span class="number">30</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;_socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="variable">$e</span>-&gt;getMessage(), <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$timeout</span> !== <span class="number">30</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        socket_set_option(<span class="keyword">$this</span>-&gt;_socket, SOL_SOCKET, SO_SNDTIMEO, [<span class="string">&#x27;sec&#x27;</span> =&gt; <span class="variable">$timeout</span>, <span class="string">&#x27;usec&#x27;</span> =&gt; <span class="number">0</span>]);</span><br><span class="line">        socket_set_option(<span class="keyword">$this</span>-&gt;_socket, SOL_SOCKET, SO_RCVTIMEO, [<span class="string">&#x27;sec&#x27;</span> =&gt; <span class="variable">$timeout</span>, <span class="string">&#x27;usec&#x27;</span> =&gt; <span class="number">0</span>]);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="variable">$e</span>-&gt;getMessage(), <span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      socket_connect(<span class="keyword">$this</span>-&gt;_socket, <span class="variable">$address</span>, <span class="variable">$port</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="variable">$e</span>-&gt;getMessage(), <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$length</span> = <span class="number">2048</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_socket === <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&#x27;Didn\&#x27;t define socket connection&#x27;</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> socket_read(<span class="keyword">$this</span>-&gt;_socket, <span class="variable">$length</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$buf</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_socket === <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&#x27;Didn\&#x27;t define socket connection&#x27;</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    socket_write(<span class="keyword">$this</span>-&gt;_socket, <span class="variable">$buf</span>, strlen(<span class="variable">$buf</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_socket === <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&#x27;Didn\&#x27;t define socket connection&#x27;</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    socket_close(<span class="keyword">$this</span>-&gt;_socket);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;_socket = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">then</span>(<span class="params"><span class="keyword">callable</span> <span class="variable">$func</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_socket === <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&#x27;Didn\&#x27;t define socket connection&#x27;</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$func</span>(<span class="keyword">$this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 添加账号</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> $account</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@throws</span> \Exception</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$account</span></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">     <span class="variable">$msg</span> = <span class="string">&quot;&lt;xml&gt;&lt;header&gt;&lt;transcode&gt;358001&lt;/transcode&gt;&lt;/header&gt;&lt;body&gt;&lt;actno&gt;<span class="subst">&#123;$account&#125;</span>&lt;/actno&gt;&lt;operType&gt;0&lt;/operType&gt;&lt;/body&gt;&lt;/xml&gt;&quot;</span>;</span><br><span class="line">     <span class="variable">$msgStr</span> = <span class="keyword">$this</span>-&gt;getMsgStr(<span class="variable">$msg</span>);</span><br><span class="line">     <span class="variable">$conn</span> = <span class="keyword">$this</span>-&gt;connect();</span><br><span class="line">     Log::init([<span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;File&#x27;</span>, <span class="string">&#x27;path&#x27;</span> =&gt; ROOT_PATH . <span class="string">&#x27;/runtime/log/njbank/add&#x27;</span>]);</span><br><span class="line">     Log::write(<span class="string">&quot;发送:&quot;</span> . <span class="variable">$msgStr</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">     <span class="variable">$conn</span>-&gt;write(<span class="variable">$msgStr</span>);</span><br><span class="line">     <span class="variable">$getstr</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">     <span class="comment">// 解决 没有读完的问题</span></span><br><span class="line">     <span class="keyword">while</span> (<span class="variable">$resp</span> = <span class="variable">$conn</span>-&gt;read()) &#123;</span><br><span class="line">         <span class="variable">$getstr</span> .= <span class="variable">$resp</span>;</span><br><span class="line">         <span class="keyword">if</span> (strpos(<span class="variable">$resp</span>, <span class="string">&quot;&lt;\xml&gt;&quot;</span>) === <span class="literal">false</span>) <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="variable">$conn</span>-&gt;close();</span><br><span class="line">     Log::write(<span class="string">&quot;结束:&quot;</span> . <span class="variable">$getstr</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">     <span class="variable">$resdata</span> = <span class="built_in">self</span>::decodeXml(<span class="variable">$getstr</span>);</span><br><span class="line">     <span class="keyword">if</span> (<span class="variable">$resdata</span>[<span class="string">&#x27;header&#x27;</span>][<span class="string">&#x27;code&#x27;</span>] == <span class="string">&#x27;000000&#x27;</span>) &#123;</span><br><span class="line">         <span class="variable">$data</span> = [</span><br><span class="line">             <span class="string">&#x27;res&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">             <span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;成功&#x27;</span></span><br><span class="line">         ];</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="variable">$data</span> = [</span><br><span class="line">             <span class="string">&#x27;res&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">             <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$resdata</span>[<span class="string">&#x27;header&#x27;</span>][<span class="string">&#x27;message&#x27;</span>]</span><br><span class="line">         ];</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;封装的连接类&quot;&gt;&lt;a href=&quot;#封装的连接类&quot; class=&quot;headerlink&quot; title=&quot;封装的连接类&quot;&gt;&lt;/a&gt;封装的连接类&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    <category term="PHP开发" scheme="http://example.com/categories/PHP%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="PHP开发" scheme="http://example.com/tags/PHP%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>php开发-mysql锁</title>
    <link href="http://example.com/posts/33571e0f.html"/>
    <id>http://example.com/posts/33571e0f.html</id>
    <published>2024-06-11T14:23:14.000Z</published>
    <updated>2024-06-29T01:34:06.859Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、数据库中的锁"><a href="#一、数据库中的锁" class="headerlink" title="一、数据库中的锁"></a>一、数据库中的锁</h1><p>   数据库锁定机制简单来说，就是数据库为了保证数据的一致性，而使各种共享资源在被并发访问变得有序所设计的一种规则。</p><h2 id="1-1-表级锁"><a href="#1-1-表级锁" class="headerlink" title="1.1 表级锁"></a>1.1 表级锁</h2><p>   使用表级锁定的主要是 MyISAM，MEMORY，CSV 等一些非事务性存储引擎。</p><h2 id="1-2-行级锁"><a href="#1-2-行级锁" class="headerlink" title="1.2 行级锁"></a>1.2 行级锁</h2><p>   使用行级锁定的主要是 InnoDB 存储引擎。</p><h2 id="行级锁类型"><a href="#行级锁类型" class="headerlink" title="行级锁类型"></a>行级锁类型</h2><p>   对于InnoDB 在 RR（MySQL默认隔离级别）而言，对于 update、delete 和 insert 语句，<br>会自动给涉及数据集加排它锁（X）；</p><p>   对于普通 select 语句，innodb 不会加任何锁。<br>如果想在 select 操作的时候加上 S 锁 或者 X 锁，需要我们手动加锁。</p><h3 id="共享锁（简称-s-锁）"><a href="#共享锁（简称-s-锁）" class="headerlink" title="共享锁（简称 s 锁）"></a>共享锁（简称 s 锁）</h3><p>  不会阻塞其他事务对同一行的读请求，但会阻塞对同一行的写请求。<br>  只有当读锁释放后，才会执行其它事物的写操作。</p><h3 id="排它锁（简称-x-锁）"><a href="#排它锁（简称-x-锁）" class="headerlink" title="排它锁（简称 x 锁）"></a>排它锁（简称 x 锁）</h3><p>  会阻塞其他事务对同一行的读和写操作，只有当写锁释放后，才会执行其它事务的读写操作</p><h2 id="Sql示列"><a href="#Sql示列" class="headerlink" title="Sql示列"></a>Sql示列</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 加共享锁（S） lock in share mode</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> ... lock <span class="keyword">in</span> share mode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 加排它锁（X)  for update</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> ... <span class="keyword">for</span> update</span><br><span class="line"></span><br><span class="line"><span class="comment">-- LOCK TABLES 语句用于锁定一个或多个表</span></span><br><span class="line">LOCK TABLES users READ;</span><br></pre></td></tr></table></figure><p>InnoDB 中的 行锁 的实现依赖于 索引，一旦某个加锁操作没有使用到索引，那么该锁就会退化为表锁。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、数据库中的锁&quot;&gt;&lt;a href=&quot;#一、数据库中的锁&quot; class=&quot;headerlink&quot; title=&quot;一、数据库中的锁&quot;&gt;&lt;/a&gt;一、数据库中的锁&lt;/h1&gt;&lt;p&gt;   数据库锁定机制简单来说，就是数据库为了保证数据的一致性，而使各种共享资源在被并发访问变</summary>
      
    
    
    
    <category term="PHP开发" scheme="http://example.com/categories/PHP%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>java学习4-层级类</title>
    <link href="http://example.com/posts/4a58ed40.html"/>
    <id>http://example.com/posts/4a58ed40.html</id>
    <published>2024-06-03T06:16:17.000Z</published>
    <updated>2024-06-03T09:13:08.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据层"><a href="#数据层" class="headerlink" title="数据层"></a>数据层</h1><h2 id="entity"><a href="#entity" class="headerlink" title="entity"></a>entity</h2><p>  entity = 实体</p><p>  严格和数据库相对应，数据库中有什么字段，entity包中的类就有什么字段。因此当操作表时，操作这个类即可。</p><p>  比如user表中有name、id、age，则entity包中对应的同名类也只有这三个同名属性</p><p>  如果是严格对数据库表操作，就用entity</p><h2 id="model-（概念实体模型）实体类和模型"><a href="#model-（概念实体模型）实体类和模型" class="headerlink" title="model  （概念实体模型）实体类和模型"></a>model  （概念实体模型）实体类和模型</h2><p>  当用model当包名时，一般里面存的是实体类的模型，是用来给后端用的。</p><p>  比如user表中有name、id、age，出于安全原因，我们需要把用户的密码定义在另一表中，即user_passwd表，<br>  但进行相关操作时，我们往往需要将两个表关联使用，每次定义都很麻烦。</p><p>  因此可以在model层中定义user_model类，将user表中的信息与user_passwd表中的信息整合成一张综合表，<br>  这样在进行操作时只需调用综合表，就可以完成对两个表的关联操作</p><p>  如果想显示某个几个表的综合信息，就用model，注意model包一般放在service层</p><h2 id="DTO-（Data-Transfer-Object）数据传输对象"><a href="#DTO-（Data-Transfer-Object）数据传输对象" class="headerlink" title="DTO （Data Transfer Object）数据传输对象"></a>DTO （Data Transfer Object）数据传输对象</h2><p>   Data Transfer Object数据传输对象的简称，多用于多个系统之间，网络通信，数据库存取等。<br>   将调用或返回的数据保存在DTO中从而减少调用负载。它不包含业务逻辑处理，但可以有数据整合性的校验。<br>   DTO需要注意的是必须序列化，即implements Serializable，<br>   一般用于接口间调用参数的传递，或访问DAO层传递条件参数使用。</p><p>   一般来说，DTO是用于在不同层之间传输数据的一个普通Java类。<br>   它通常用于封装从数据库查询结果中提取的数据，或者用于在应用程序的不同模块之间传递数据。</p>  <font color="red"> <p>  一般在 前端（Web） </p><p>   对控制层（Controller）进行数据传输时使用，说白了就是</p><p>   前端向后台<br>   提交数据。</p><p>   xxxDTO，xxx为业务领域相关的名称<br>   </font></p><h2 id="VO-（View-Object）视图模型"><a href="#VO-（View-Object）视图模型" class="headerlink" title="VO （View Object）视图模型"></a>VO （View Object）视图模型</h2><p>   Value Object值对象的简称，主要体现在视图的对象，<br>   对于一个WEB页面将整个页面的属性封装成一个对象，然后用一个VO对象在控制层与视图层进行传输交换，<br>   比如页面要显示100个字段，而实体只有10个，就可以封装一个VO返回。<br><font color="red"><br>   一般用在业务逻辑层（Service） </p><p>   对前端（Web） 的 视图模型效果控制的展示上，说白了就是</p><p>   后台向前端<br>   传输数据。</p><p>   xxxVO，xxx一般为网页名称<br></font>   </p><h2 id="Form"><a href="#Form" class="headerlink" title="Form"></a>Form</h2><p>   主要用于接收页面表单中的数据或者页面显示用数据的存储，<br>   包含校验Validate方法,一般用于controller层用来接收前端传过来的参数   </p><h2 id="domain"><a href="#domain" class="headerlink" title="domain"></a>domain</h2><p>  domain = 域</p><p>  域是一个大范围，如简历域包括工作经验表、项目经验表、简历基本信息表。<br>  在domain包中，就可以定义一个大的简历对象，将三个表的内容整合在一个对象中，作为整体操作。  </p><p>  如果想对几个表综合操作，就用domain</p><h1 id="数据访问层"><a href="#数据访问层" class="headerlink" title="数据访问层"></a>数据访问层</h1><h2 id="DAO-（Data-Access-Object）数据访问对象"><a href="#DAO-（Data-Access-Object）数据访问对象" class="headerlink" title="DAO （Data Access Object）数据访问对象"></a>DAO （Data Access Object）数据访问对象</h2><p>   DAO(Data Access Object)是一个数据访问接口，数据访问：顾名思义就是与数据库打交道。<br>   夹在业务逻辑与数据库资源中间。<br><font color="red"><br>   一般在 业务逻辑层（Service） </p><p>  对</p><p>  数据库（SQL） 的访问时使用，一般能对SQL进行操作。</p><p>  xxxDAO，xxx即为实体类名（Entity实体）<br></font>    </p><h2 id="Mapper"><a href="#Mapper" class="headerlink" title="Mapper"></a>Mapper</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据层&quot;&gt;&lt;a href=&quot;#数据层&quot; class=&quot;headerlink&quot; title=&quot;数据层&quot;&gt;&lt;/a&gt;数据层&lt;/h1&gt;&lt;h2 id=&quot;entity&quot;&gt;&lt;a href=&quot;#entity&quot; class=&quot;headerlink&quot; title=&quot;entity&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>DNS问题</title>
    <link href="http://example.com/posts/7052941e.html"/>
    <id>http://example.com/posts/7052941e.html</id>
    <published>2024-05-25T05:35:34.000Z</published>
    <updated>2024-06-03T06:28:06.599Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-系统"><a href="#ubuntu-系统" class="headerlink" title="ubuntu 系统"></a>ubuntu 系统</h1><h2 id="传统方法"><a href="#传统方法" class="headerlink" title="传统方法"></a>传统方法</h2><p>   /etc/resolv.conf  可能被重置</p><p>   查看是否启用systemd-resolved服务、NetworkManager服务</p><p>   systemctl status  systemd-resolved   用于提供本地DNS解析服务</p><p>   systemctl status  NetworkManager</p><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>   永久修改DNS方法</p><p>   /etc/systemd/resolved.conf  </p><p>   配置 指定 DNS 服务器，以空白分隔，支持 IPv4 或 IPv6 位置<br>   DNS=114.114.114.114 8.8.8.8</p><p>   重启服务生效<br>   systemctl restart systemd-resolved</p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>   /etc/netplan 目录下【00-installer-config.yaml、其他yaml 有可能覆盖】</p><p>   配置示例：</p><pre><code>   # This is the network config written by &#39;subiquity&#39;   network:     ethernets:       ens160:         dhcp4: false         addresses:           - 192.168.100.203/24         routes:           - to: default             via: 192.168.100.1         nameservers:           addresses: [114.114.114.114、8.8.8.8]     version: 2</code></pre><p>   配置完执行<br>       sudo netplan apply</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><pre><code>如果重启 不生效 重置检查 /etc/cloud/cloud.cfg 文件中的 reslv_conf 注释</code></pre><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><pre><code>resolvectl statusnslookup               </code></pre><h1 id="redhat-centos系统"><a href="#redhat-centos系统" class="headerlink" title="redhat/centos系统"></a>redhat/centos系统</h1><pre><code>/etc/resolv.conf/etc/sysconfig/network-scripts/ifcfg-ens验证nslookup www.baidu.com</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ubuntu-系统&quot;&gt;&lt;a href=&quot;#ubuntu-系统&quot; class=&quot;headerlink&quot; title=&quot;ubuntu 系统&quot;&gt;&lt;/a&gt;ubuntu 系统&lt;/h1&gt;&lt;h2 id=&quot;传统方法&quot;&gt;&lt;a href=&quot;#传统方法&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>k8s安装配置</title>
    <link href="http://example.com/posts/5951e8f7.html"/>
    <id>http://example.com/posts/5951e8f7.html</id>
    <published>2024-05-16T11:58:36.000Z</published>
    <updated>2024-05-31T07:42:46.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、redhat-openEluer-22-Centos-系统-安装k8s"><a href="#一、redhat-openEluer-22-Centos-系统-安装k8s" class="headerlink" title="一、redhat/openEluer 22/Centos 系统 安装k8s"></a>一、redhat/openEluer 22/Centos 系统 安装k8s</h1><h2 id="1-1-更新源"><a href="#1-1-更新源" class="headerlink" title="1.1 更新源"></a>1.1 更新源</h2><p>wget -O /etc/yum.repos.d/CentOS-Base.repo <a href="http://mirrors.aliyun.com/repo/Centos-7.repo">http://mirrors.aliyun.com/repo/Centos-7.repo</a><br>编辑替换  %s/$releasever/7/g</p><p>设置仓库，需要安装所需的软件包。yum-utils 提供了 yum-config-manager ，<br>并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2</p><p>yum install -y yum-utils device-mapper-persistent-data lvm2</p><p>yum-config-manager –add-repo <a href="https://download.docker.com/linux/centos/docker-ce.repo">https://download.docker.com/linux/centos/docker-ce.repo</a><br>编辑替换  %s/$releasever/7/g</p><h2 id="1-2-安装-docker"><a href="#1-2-安装-docker" class="headerlink" title="1.2 安装 docker"></a>1.2 安装 docker</h2><p>yum install docker-ce</p><h2 id="1-3-新增k8s源及安装"><a href="#1-3-新增k8s源及安装" class="headerlink" title="1.3 新增k8s源及安装"></a>1.3 新增k8s源及安装</h2><p>新增k8s源<br>cat &lt;<EOF > /etc/yum.repos.d/kubernetes.repo<br>[kubernetes]<br>name=Kubernetes<br>baseurl=<a href="https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/">https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</a><br>enabled=1<br>gpgcheck=0<br>EOF</p><p>yum install kubeadm kubelet kubectl </p><h1 id="二、ubuntu-系统安装-k8s"><a href="#二、ubuntu-系统安装-k8s" class="headerlink" title="二、ubuntu 系统安装 k8s"></a>二、ubuntu 系统安装 k8s</h1><p> sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common</p><p> curl -s <a href="https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg">https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg</a> | sudo apt-key add -</p><p> sudo apt-add-repository “deb <a href="https://mirrors.aliyun.com/kubernetes/apt/">https://mirrors.aliyun.com/kubernetes/apt/</a> kubernetes-xenial main”</p><p> sudo apt-get update</p><p>  vi /etc/apt/sources.list</p><p> deb <a href="https://mirrors.aliyun.com/kubernetes/apt">https://mirrors.aliyun.com/kubernetes/apt</a> kubernetes-xenial main</p><p> apt-get update<br> sudo apt update</p><p> #sudo apt install -y kubelet=1.26.1-00 kubeadm=1.26.1-00 kubectl=1.26.1-00</p><p> sudo apt install kubelet kubeadm kubectl<br> sudo apt-mark hold kubelet kubeadm kubectl</p><h1 id="三、必要的系统设置"><a href="#三、必要的系统设置" class="headerlink" title="三、必要的系统设置"></a>三、必要的系统设置</h1><h2 id="3-1-关闭-selinux-关闭防火墙【暂时】（redhat系统）"><a href="#3-1-关闭-selinux-关闭防火墙【暂时】（redhat系统）" class="headerlink" title="3.1 关闭 selinux  关闭防火墙【暂时】（redhat系统）"></a>3.1 关闭 selinux  关闭防火墙【暂时】（redhat系统）</h2><p>零时关闭<br>   setenforce 0  </p><p>永久关闭<br>       vi /etc/selinux/config<br>       将参数修改为SELINUX=disabled</p><p>关闭防火墙</p><p>   systemctl stop iptables</p><p>   systemctl stop firewalld</p><p>   systemct stop ufw</p><h2 id="3-2-禁用交换分区"><a href="#3-2-禁用交换分区" class="headerlink" title="3.2 禁用交换分区"></a>3.2 禁用交换分区</h2><p>   swapoff -a </p><p>   /etc/fstab 文件下永久关闭<br>   打开/etc/fstab注释掉swap那一行</p><p>   sed -i ‘s/.<em>swap.</em>/#&amp;/‘ /etc/fstab  </p><h2 id="3-3-开启端口转发"><a href="#3-3-开启端口转发" class="headerlink" title="3.3 开启端口转发"></a>3.3 开启端口转发</h2><p>   vim  /proc/sys/net/ipv4/ip_forward<br>   sysctl -w net.ipv4.ip_forward=1</p><h2 id="3-4-修改内核参数"><a href="#3-4-修改内核参数" class="headerlink" title="3.4 修改内核参数"></a>3.4 修改内核参数</h2><p>cat &lt;<EOF >  /etc/sysctl.d/k8s.conf<br>net.bridge.bridge-nf-call-ip6tables = 1<br>net.bridge.bridge-nf-call-iptables = 1<br>EOF<br>sysctl –system </p><h2 id="3-5-设置时区更新时间"><a href="#3-5-设置时区更新时间" class="headerlink" title="3.5 设置时区更新时间"></a>3.5 设置时区更新时间</h2><pre><code> timedatectl  查看时区  设置时区 timedatectl set-timezone Asia/Shanghai </code></pre><h2 id="配置host"><a href="#配置host" class="headerlink" title="配置host"></a>配置host</h2><pre><code>vim /etc/hosts </code></pre><h1 id="三、master-节点配置"><a href="#三、master-节点配置" class="headerlink" title="三、master 节点配置"></a>三、master 节点配置</h1><h2 id="3-1-配置项-解释"><a href="#3-1-配置项-解释" class="headerlink" title="3.1 配置项 解释"></a>3.1 配置项 解释</h2><p> 自定义镜像进行初始化(推荐)<br> 使用自定义kubernets镜像仓库进行初始化</p><p> apiserver-advertise-address: 配置 apiserver ip  本机ip<br>                             指明用 Master 的哪个 interface 与 Cluster 的其他节点通信。<br>                             如果 Master 有多个 interface，建议明确指定，如果不指定，kubeadm 会自动选择有默认网关的 interface。<br>                             这里的ip为master节点ip，记得更换</p><p> apiserver-bind-port       : 配置 apiserver 端口 默认 6443</p><p> control-plane-endpoint    : 配置 控制端   ip  默认本机ip<br>                             cluster-endpoint 是映射到该 IP 的自定义 DNS 名称，这里配置hosts映射：192.168.0.113   cluster-endpoint。<br>                             这将允许你将 –control-plane-endpoint=cluster-endpoint 传递给 kubeadm init，并将相同的 DNS 名称传递给 kubeadm join。<br>                             稍后你可以修改 cluster-endpoint 以指向高可用性方案中的负载均衡器的地址。</p><p> service-cidr               这个参数指定了 Kubernetes 集群中服务（Service）的 IP 地址范围。在该示例中，服务 IP 地址将从 10.119.0.0 开始分配。</p><p> service-dns-domain         这个参数指定了 Kubernetes 集群中服务的 DNS 域名。在该示例中，服务的 DNS 域名将使用 “cluster.local”。</p><p> pod-network-cidr  :    这个参数指定了 Kubernetes 集群中 Pod 的 IP 地址范围。在该示例中，Pod 的 IP 地址将从 10.120.0.0 开始分配。<br>                        指定 Pod 网络的范围。Kubernetes 支持多种网络方案，而且不同网络方案对<br>                        –pod-network-cidr有自己的要求，这里设置为10.244.0.0/16 是因为我们将使用 flannel 网络方案<br>                        必须设置成这个 CIDR。</p><p> image-repository           这个用于指定从什么位置来拉取镜像（1.13版本才有的），默认值是k8s.gcr.io，<br>                            我们将其指定为国内镜像地址：registry.aliyuncs.com/google_containers</p><p> kubernetes-version        指定kubenets版本号，默认值是stable-1，会导致从<a href="https://dl.k8s.io/release/stable-1.txt%E4%B8%8B%E8%BD%BD%E6%9C%80%E6%96%B0%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%EF%BC%8C">https://dl.k8s.io/release/stable-1.txt下载最新的版本号，</a><br>                           我们可以将其指定为固定版本（v1.22.1）来跳过网络请求</p><h2 id="3-2配置示例："><a href="#3-2配置示例：" class="headerlink" title="3.2配置示例："></a>3.2配置示例：</h2><p> kubeadm init <br> –apiserver-advertise-address 192.168.240.11 <br> –apiserver-bind-port 6443 <br> –control-plane-endpoint 192.168.240.11 <br> –service-cidr=10.119.0.0/16 <br> –service-dns-domain=”cluster.local” <br> –pod-network-cidr=10.120.0.0/16 <br> –image-repository registry.aliyuncs.com/google_containers </p><p> kubeadm init <br>  –apiserver-advertise-address=192.168.100.203 <br>  –image-repository registry.aliyuncs.com/google_containers <br>  –service-cidr=10.119.0.0/16 <br>  –pod-network-cidr=10.120.0.0/16 <br>  –kubernetes-version v1.28.2</p><p> kubeadm init <br>   –apiserver-advertise-address=192.168.31.200 <br>   –image-repository registry.aliyuncs.com/google_containers <br>   –kubernetes-version v1.18.0 <br>   –service-cidr=10.96.0.0/12 <br>   –pod-network-cidr=10.244.0.0/16</p><h2 id="3-3-配置-kubectl"><a href="#3-3-配置-kubectl" class="headerlink" title="3.3 配置 kubectl"></a>3.3 配置 kubectl</h2><p>   mkdir -p $HOME/.kube<br>   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>   sudo chown $(id -u):$(id -g) $HOME/.kube/config<br>   echo ‘export KUBECONFIG=$HOME/.kube/config’ &gt;&gt; $HOME/.bashrc<br>   source ~/.bashrc</p><h2 id="3-3-配置网络"><a href="#3-3-配置网络" class="headerlink" title="3.3 配置网络"></a>3.3 配置网络</h2><p>   kubectl apply -f <a href="https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml">https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</a></p><p>   如果被墙，可以直接保存下列文件进行安装</p><p>   kubectl apply -f kube-flannel.yaml</p><h1 id="四、node-节点配置"><a href="#四、node-节点配置" class="headerlink" title="四、node 节点配置"></a>四、node 节点配置</h1><h2 id="4-1-配置文件处理"><a href="#4-1-配置文件处理" class="headerlink" title="4.1 配置文件处理"></a>4.1 配置文件处理</h2><p> mkdir -p $HOME/.kube</p><p> 复制master节点的 /etc/kubernetes/admin.conf 到 node节点 $HOME/.kube/config</p><p> sudo  $(id -u):$(id -g) $HOME/.kube/config</p><p> echo ‘export KUBECONFIG=$HOME/.kube/config’ &gt;&gt; $HOME/.bashrc</p><p> source ~/.bashrc</p><h2 id="4-2-加入节点"><a href="#4-2-加入节点" class="headerlink" title="4.2 加入节点"></a>4.2 加入节点</h2><p>   可以master 节点执行  kubeadm token create –print-join-command 获取加入节点命令</p><p>   kubeadm join 172.17.131.4:6443 –token decqn7.lwcygbjmzof0xny3  <br>   –discovery-token-ca-cert-hash sha256:8f0e8d2c04e38c7aa291d8b47be2bd8a5127bf1071263e01bdd5602ab331a01d</p><h1 id="五、相关命令"><a href="#五、相关命令" class="headerlink" title="五、相关命令"></a>五、相关命令</h1><p> 如何生成 Kubeadm Join 命令？<br> 您可以使用 command 生成 join 命令。kubeadm token create –print-join-command</p><p> 重置节点（清除kubeadm信息）<br> kubeadm reset</p><p> 查看 pod 节点<br> kubectl get nodes</p><p> 删除的节点<br> kubectl delete node <node_name></p><p>于官网镜像在国内访问不稳定，会出现访问失败。<br>使用国内镜像进行替换下载，在此pause使用3.9会导致集群无法初始化，还需要下载pause:3.6<br>以下命令在每台服务器上执行<br>使用自定义镜像仓库拉取镜像<br>kubeadm config images pull  <br>–image-repository registry.aliyuncs.com/google_containers <br>–kubernetes-version v1.28.2</p><h1 id="六-报错"><a href="#六-报错" class="headerlink" title="六 报错"></a>六 报错</h1><p> 报错如下<br> “open /run/systemd/resolve/resolv.conf: no such file or directory” pod=”kubelet<br> 解决：<br> yum install systemd-resolved 解决</p><p>报错如下：<br>combined from similar events): Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network for sandbox &amp;quot;4d992cde6a671b8fa3264a90f5f11aa01d1713376abf0cdf9a4e27ec82860185&amp;quot;: plugin type=&amp;quot;flannel&amp;quot; failed (add): loadFlannelSubnetEnv<br>failed: open /run/flannel/subnet.env: no such file or directory</p><p>解决：<br>配置 /run/flannel/subnet.env<br>pod 网络信息 </p><p>FLANNEL_NETWORK=10.120.0.0/16<br>FLANNEL_SUBNET=10.120.0.1/24<br>FLANNEL_MTU=1450<br>FLANNEL_IPMASQ=true</p><p>报错如下：<br>[preflight] Running pre-flight checks<br>error execution phase preflight: [preflight] Some fatal errors occurred:<br>    [ERROR FileContent–proc-sys-net-ipv4-ip_forward]: /proc/sys/net/ipv4/ip_forward contents are not set to 1<br>[preflight] If you know what you are doing, you can make a check non-fatal with <code>--ignore-preflight-errors=...</code><br>To see the stack trace of this error execute with –v=5 or higher</p><p> 解决：<br>sysctl -w net.ipv4.ip_forward=1</p><p>报错如下：</p><p> NotReady message:Network plugin returns error: cni plugin not initialized<br> to get sandbox image &quot;registry.k8s.i</p><p> evel=info msg=”Stop CRI service”<br> 024-05-31T02:22:27.294384683Z” level=info msg=”stop pulling image registry.k8s.io/pause:3.8: active requests=1, bytes&gt;<br> 024-05-31T02:22:27.294515739Z” level=info msg=”trying next host” error=”failed to do request: Head &quot;<a href="https://us-west2&gt;/">https://us-west2&gt;</a> </p><p>解决</p><p>containerd config default &gt; /etc/containerd/config.toml</p><p>修改<br>sandbox_image = “registry.aliyuncs.com/google_containers/pause:3.9”</p><p>systemctl restart containerd</p><p>mkdir /etc/containerd<br>containerd config default &gt; /etc/containerd/config.toml<br>sed -i ‘/sandbox_image/s#registry.k8s.io/pause:3.8#registry.aliyuncs.com/google_containers/pause:3.9#g’ /etc/containerd/config.toml<br>sed -i ‘/SystemdCgroup/s/false/true/‘ /etc/containerd/config.toml<br>systemctl restart containerd</p><p>发现不了节点报错<br><a href="https://blog.csdn.net/qq_32264301/article/details/125486521">https://blog.csdn.net/qq_32264301/article/details/125486521</a></p><p> error=”rpc error: code = Unavailable desc = error reading from server: EOF” module=libcontainerd namespace=moby</p><p>报错<br>Error registering network: failed to acquire lease: subnet “10.244.0.0/16”<br>specified in the flannel net config doesn’t contain “10.120.0.0/24” PodCIDR of the “ubuntuutoootest” node </p><p>修改 kube-flannel.yml</p><p>net-conf.json: |<br>    {<br>      “Network”: “10.120.0.0/16”,<br>      “EnableNFTables”: false,<br>      “Backend”: {<br>        “Type”: “vxlan”<br>      }<br>    }</p><hr><h1 id="k8组件"><a href="#k8组件" class="headerlink" title="k8组件"></a>k8组件</h1><p>k8s的主要组件，以及它们主要是用来干什么的：</p><p>3.1 「主节点（Master）」<br>主节点负责管理集群的整体状态和控制工作节点的操作。它包括以下组件：</p><p>「API Server：」 提供了K8s API的入口，用于与Kubernetes进行交互。<br>「Controller Manager：」 负责监控系统状态，确保实际状态符合期望状态。<br>「Scheduler：」 负责将Pod调度到工作节点上运行。</p><p>3.2 「工作节点（Node）」<br>工作节点是集群中的计算资源，用于运行容器。每个工作节点包括以下组件：</p><p>「Kubelet：」 负责与主节点通信，确保在节点上运行所需的Pod。<br>「Container Runtime：」 用于启动和管理容器的软件，如Docker。<br>「Kube Proxy：」 负责在节点上实现Service的网络代理。</p><p>etcd：一款开源软件。提供可靠的分布式数据存储服务，用于持久化存储K8s集群的配置和状态</p><p>apiservice：用户程序（如kubectl）、K8s其它组件之间通信的接口。K8s其它组件之间不直接通信，而是通过API server通信的。这一点在上图的连接中可以体现，例如，只有API server连接了etcd，即其它组件更新K8s集群的状态时，只能通过API server读写etcd中的数据。</p><p>Scheduler：排程组件，为用户应用的每一可部署组件分配工作结点。</p><p>controller-manager：执行集群级别的功能，如复制组件、追踪工作结点状态、处理结点失败等。Controller Manager组件是由多个控制器组成的，其中很多控制器是按K8s的资源类型划分的，如Replication Manager（管理ReplicationController 资源），ReplicaSet Controller，PersistentVolume controller。</p><p>kube-proxy：在应用组件间负载均衡网络流量。</p><p>kubelet：管理工作结点上的容器。</p><p>Contriner runtime Docker， rkt等实际运行容器的组件</p><p>报错</p><p>报错</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、redhat-openEluer-22-Centos-系统-安装k8s&quot;&gt;&lt;a href=&quot;#一、redhat-openEluer-22-Centos-系统-安装k8s&quot; class=&quot;headerlink&quot; title=&quot;一、redhat/openEluer</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java学习3-Servlet及HttpSeverlet</title>
    <link href="http://example.com/posts/e9f2e524.html"/>
    <id>http://example.com/posts/e9f2e524.html</id>
    <published>2024-04-10T07:17:32.000Z</published>
    <updated>2024-04-10T07:56:31.982Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、Servlet"><a href="#一、Servlet" class="headerlink" title="一、Servlet"></a>一、Servlet</h1><h2 id="1-1基础知识"><a href="#1-1基础知识" class="headerlink" title="1.1基础知识"></a>1.1基础知识</h2><p>Servlet是什么呢？Servlet就是一个服务端的小组件，这个小组件可以接受客户端发过来的信息，然后对其进行处理。</p><p>Servlet是一个抽象类，它的各种方法要由它的继承类和接口来实现。</p><h2 id="1-2继承关系"><a href="#1-2继承关系" class="headerlink" title="1.2继承关系"></a>1.2继承关系</h2><p> javax.servlet.Servlet接口</p><p>​ javax.servlet.GenericsServlet 抽象类</p><p>​ javax.servletHttpServlet</p><h2 id="1-3Servlet有下面三种方法："><a href="#1-3Servlet有下面三种方法：" class="headerlink" title="1.3Servlet有下面三种方法："></a>1.3Servlet有下面三种方法：</h2><p>   init （初始化方法）启动servlet 容器执行一次<br>   service（服务方法）<br>   destory（销毁方法）关闭servlet 容器 执行</p><h2 id="1-3示例代码"><a href="#1-3示例代码" class="headerlink" title="1.3示例代码"></a>1.3示例代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.study;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFirstServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Init&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest request, ServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;From service&quot;</span>);</span><br><span class="line">        PrintWriter out = response.getWriter();</span><br><span class="line">        out.println(<span class="string">&quot;Hello, Java Web.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Destroy&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二、HttpServlet"><a href="#二、HttpServlet" class="headerlink" title="二、HttpServlet"></a>二、HttpServlet</h1><h2 id="1-1基础知识-1"><a href="#1-1基础知识-1" class="headerlink" title="1.1基础知识"></a>1.1基础知识</h2><p>HttpServlet 实现了 Servlet<br>HttpServlet可以理解为专门处理Http文件的服务器组件Servlet<br><font color="red">如果客户端有信息发过来的话，HttpServlet会被调用的只有Servlet方法，<br>然后Servlet方法就会去判断对面发过来的请求是什么，调用doGet 还是doPost等等</font></p><h2 id="2-1HttpServlet有的方法："><a href="#2-1HttpServlet有的方法：" class="headerlink" title="2.1HttpServlet有的方法："></a>2.1HttpServlet有的方法：</h2><p>init()<br>service()  每次收到路径匹配的请求都要调用一次。<br>destory()<br>doGet(),<br>doPost(),<br>doPut/doDelete/doOption</p><h2 id="2-2-HttpServletRequest"><a href="#2-2-HttpServletRequest" class="headerlink" title="2.2 HttpServletRequest"></a>2.2 HttpServletRequest</h2><h2 id="2-3HttpServletResponse"><a href="#2-3HttpServletResponse" class="headerlink" title="2.3HttpServletResponse"></a>2.3HttpServletResponse</h2><h2 id="2-4-示例代码"><a href="#2-4-示例代码" class="headerlink" title="2.4 示例代码"></a>2.4 示例代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="meta">@WebServlet(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf8&quot;</span>);</span><br><span class="line">        resp.getWriter().write(<span class="string">&quot;这是一个doGet方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">&quot;这是一个doPost方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPut</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">&quot;这是一个doPut&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doDelete</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">&quot;这是一个doDelete方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、Servlet&quot;&gt;&lt;a href=&quot;#一、Servlet&quot; class=&quot;headerlink&quot; title=&quot;一、Servlet&quot;&gt;&lt;/a&gt;一、Servlet&lt;/h1&gt;&lt;h2 id=&quot;1-1基础知识&quot;&gt;&lt;a href=&quot;#1-1基础知识&quot; class=&quot;he</summary>
      
    
    
    
    
  </entry>
  
</feed>
